Line 1:  In computing, the term stream is 
Line 2:  used in a number of ways, in all 
Line 3:  cases referring to a sequence of
Line 4:  data elements made available over
Line 5:  time. A stream can be thought of
Line 6:  as a conveyor belt that allows 
Line 7:  items to be processed one at a 
Line 8:  time rather than in large batches.
Line 9:  On Unix and related systems based
Line 10:  on the C language, a stream is a 
Line 11:  source or sink of data, usually
Line 12:  individual bytes or characters.
Line 13:  Streams are an abstraction used 
Line 14:  when reading or writing files,
Line 15:  or communicating over network 
Line 16:  sockets. The standard streams
Line 17:  are three streams made available
Line 18:  to all programs. Pipelines can 
Line 19:  also be understood as streams as 
Line 20:  well as any unlimited (non-packaged) 
Line 21:  information that is inserted by 
Line 22:  a device. 
Line 23:  	In the Scheme language and
Line 24:  some others, a stream is a lazily
Line 25:  evaluated or delayed sequence of
Line 26:  data elements. A stream can be 
Line 27:  used similarly to a list, but
Line 28:  later elements are only calculated
Line 29:  when needed. Streams can therefore
Line 30:  represent infinite sequences and
Line 31:  series.
